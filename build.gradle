buildscript {
//	ext {
//		springBootVersion = '2.2.3.RELEASE'
//	}
    repositories {
        mavenCentral()
        maven {
            url "https://repo.spring.io/release"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.3.RELEASE")
        //classpath("io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.2.RELEASE"
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}
apply plugin: "io.spring.dependency-management"



group = 'com.bluecompute.customers'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Hoxton.RELEASE"
    }
}


//'org.springframework.cloud:spring-cloud-dependencies:Hoxton.M2'
//"org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE"

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }


    //compile('org.springframework.cloud:spring-cloud-starter-eureka')
    //compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-eureka-server', version: '1.4.7.RELEASE'
    //implementation  'org.springframework.cloud:spring-cloud-starter-eureka:1.4.7.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.2.1.RELEASE'

    //compile('org.springframework.cloud:spring-cloud-starter-hystrix')
    implementation  'org.springframework.cloud:spring-cloud-starter-hystrix:1.4.7.RELEASE'

    implementation  'org.springframework.security.oauth:spring-security-oauth2:2.4.0.RELEASE'


    implementation 'org.springframework.security:spring-security-jwt:1.1.0.RELEASE'

    // tag::jetty[]
    //compile('org.springframework.boot:spring-boot-starter-security')

    implementation 'org.springframework.boot:spring-boot-starter-security:2.2.4.RELEASE'

    // tag::jetty[]
    //compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.2.4.RELEASE'

    implementation ('org.springframework.boot:spring-boot-starter-web:2.2.4.RELEASE'){
        exclude module: 'spring-boot-starter-tomcat'
    }


    //compile("org.springframework.boot:spring-boot-starter-web") {
    //exclude module: "spring-boot-starter-tomcat"
    //}

    //compile("org.springframework.boot:spring-boot-starter-jetty")
    //compile group: 'org.springframework.boot', name: 'spring-boot-starter-jetty', version: '2.2.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-jetty:2.2.2.RELEASE'

    //compile("org.springframework:spring-web")
    //compile group: 'org.springframework', name: 'spring-web', version: '5.2.3.RELEASE'

    implementation 'org.springframework:spring-web:5.2.3.RELEASE'

    // end::jetty[]
    //compile("org.springframework.boot:spring-boot-starter-actuator")
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.2.4.RELEASE'
    implementation 'com.cloudant:cloudant-client:2.18.0'
    testCompile('junit:junit:[4,)')
/*

	//testCompile("junit:junit")
	//testCompile("org.springframework.boot:spring-boot-starter-test")
	//compile group: 'com.cloudant', name:'cloudant-client', version: '2.7.0'
	compile group: 'com.cloudant', name: 'cloudant-client', version: '2.18.0'
	//compile group: 'ch.qos.logback', name: 'logback-core', version: '1.1.3'
	testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha5'
	testCompile('junit:junit:[4,)')
*/
}

test {
    useJUnitPlatform()
    testLogging {
        events 'started', 'passed'
        showStandardStreams = true
    }
}

/*
buildscript {
    ext {
        springBootVersion = '2.2.2.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "http://repo.spring.io/release"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.3.RELEASE")
        classpath("io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE")
    }
}

plugins{
    id 'org.springframework.boot' version '2.2.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'idea'
    id 'eclipse'
}

jar {
    baseName = 'micro-customer'
    version =  '0.0.1'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
     imports {
          mavenBom 'org.springframework.cloud:spring-cloud-starter-parent:Angel.SR4'
     }
}

dependencies {
    compile('org.springframework.cloud:spring-cloud-starter-eureka')
    compile('org.springframework.cloud:spring-cloud-starter-hystrix')
    compile('org.springframework.security.oauth:spring-security-oauth2')
    compile('org.springframework.security:spring-security-jwt')
    // tag::jetty[]
    compile('org.springframework.boot:spring-boot-starter-security')
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    //compile("org.springframework.boot:spring-boot-starter-jetty")
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jetty', version: '2.2.2.RELEASE'
    compile("org.springframework:spring-web")
    // end::jetty[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    //testCompile("junit:junit")
    //testCompile("org.springframework.boot:spring-boot-starter-test")
    compile group: 'com.cloudant', name:'cloudant-client', version: '2.7.0'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.1.3'
    testCompile('junit:junit:[4,)')
}

test {
    useJUnit()
    testLogging {
        events 'started', 'passed'
        showStandardStreams = true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10'
}
*/